get:
  summary: GET /persons/{personId}
  description: Get a single person.
  tags:
    - persons
  parameters:
    - name: personId
      in: path
      description: User ID
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../schemas/Person.yaml'
    '404':
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '../schemas/Problem.yaml'
post:
  summary: POST /persons
  description: Add a person to the records of the institution
  tags:
    - persons
  operationId: addPerson
  requestBody:
    $ref: '#/components/requestBodies/PersonBody'
  responses:
    '201':
      description: Created
      content:
        application/json:
      properties:
        type: object
        properties:
          description: Unique id of this person
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    '405':
      description: Invalid input


components:
  requestBodies:
    PersonBody:
      description: A JSON object containing person information
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/Person_min.yaml'